import requests
import time

def fetch_all_webshare_proxies(api_key: str, per_page: int = 100, delay: float = 2) -> list:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–∫—Å–∏ —Å Webshare.io —Å —É—á–µ—Ç–æ–º –ø–∞–≥–∏–Ω–∞—Ü–∏–∏.

    Parameters:
        api_key (str): API-–∫–ª—é—á Webshare.
        per_page (int): –ö–æ–ª-–≤–æ –ø—Ä–æ–∫—Å–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–º–∞–∫—Å. 100).
        delay (float): –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.

    Returns:
        List[str]: –°–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–æ–∫—Å–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ http://user:pass@ip:port
    """
    base_url = "https://proxy.webshare.io/api/v2/proxy/list/"
    headers = {
        "Authorization": f"Token {api_key}"
    }

    page = 1
    all_proxies = []

    while True:
        params = {
            "mode": "direct",
            "page": page,
            "limit": per_page
        }

        response = requests.get(base_url, headers=headers, params=params)

        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page}: {response.status_code} - {response.text}")
            break

        data = response.json()
        results = data.get("results", [])

        if not results:
            print("‚úÖ –í—Å–µ –ø—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
            break

        for proxy in results:
            ip = proxy['proxy_address']
            port = proxy['port']
            username = proxy['username']
            password = proxy['password']
            proxy_url = f"http://{username}:{password}@{ip}:{port}"
            all_proxies.append(proxy_url)

        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}: –∑–∞–≥—Ä—É–∂–µ–Ω–æ {len(results)} –ø—Ä–æ–∫—Å–∏")
        page += 1
        time.sleep(delay)

    print(f"\nüî¢ –í—Å–µ–≥–æ –ø—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(all_proxies)}")
    return all_proxies


# üîß –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
#WEBSHAREIO_PROXY_API_KEY = '45wult21nqfr7k2w6y8ms51gh5aqp35r2ikb4wou'
#working_proxies = fetch_all_webshare_proxies(WEBSHAREIO_PROXY_API_KEY)